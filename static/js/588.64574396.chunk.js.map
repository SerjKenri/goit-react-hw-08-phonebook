{"version":3,"file":"static/js/588.64574396.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormS = styled.form`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const InputS = styled.input`\n    display: flex;\n    align-items: center;\n    justify-items: center;\n    flex-direction: column;\n    align-items: center;\n    font-size: large;\n    text-align: left;\n    border-radius: 8px;\n    background-color: #f2f2f2;\n    padding: 10px;\n    font-size: 16px;\n    box-shadow: 0px 0px 5px #888;\n    border: 2px solid #666;\n`;\n\nexport const LabelS = styled.label`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    margin: 0.5rem auto;\n    font-size: 1em;\n    font-family: 'Arial', sans-serif;\n    color: #3d3d3d;\n    padding: 0.4em 0.8em;\n    border-radius: 0.4em;\n    background-color: #dcdcdc;\n    font-weight: bold;\n    text-align: center;\n    border: 1px solid #a9a9a9;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n    overflow: hidden;\n`;\n\nexport const ButtonS = styled.button`\n    box-sizing: border-box;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    background-color: transparent;\n    border: 2px solid #e74c3c;\n    border-radius: 0.6em;\n    cursor: pointer;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    -webkit-align-self: center;\n    -ms-flex-item-align: center;\n    align-self: center;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 1;\n    margin: 20px;\n    padding: 1.2em 2.8em;\n    text-decoration: none;\n    text-align: center;\n    text-transform: uppercase;\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 700;\n    border-color: #3498db;\n    color: rgb(255, 255, 255);\n    box-shadow: 0 0 40px 40px #3498db inset, 0 0 0 0 #3498db;\n    -webkit-transition: all 150ms ease-in-out;\n    transition: all 150ms ease-in-out;\n    font-family: Georgia;\n    :hover,\n    :focus,\n    :active {\n        color: #3498db;\n        box-shadow: 0 0 10px 0 #3498db inset, 0 0 10px 4px #3498db;\n    }\n`;\n","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;","import React from 'react';\nimport { useState } from 'react';\nimport { FormS, InputS, LabelS, ButtonS } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n\n    const handleChangeName = e => {\n        setName(e.target.value);\n    };\n\n    const handleChangeNumber = e => {\n        setNumber(e.target.value);\n    };\n\n    const handleFormSubmit = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n\n        if (contacts.some(contact => name === contact.name)) {\n            alert(`${name} is already in contacts.`);\n        } else {\n            dispatch(addContact({ name, number }));\n        }\n\n        form.reset();\n    };\n\n    return (\n        <FormS onSubmit={handleFormSubmit}>\n            <LabelS>\n                Name\n                <InputS\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={handleChangeName}\n                />\n            </LabelS>\n            <LabelS>\n                Number\n                <InputS\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    placeholder=\"Enter phone number\"\n                    value={number}\n                    onChange={handleChangeNumber}\n                />\n            </LabelS>\n            <ButtonS type=\"submit\">Add contact</ButtonS>\n        </FormS>\n    );\n};\n","import styled from 'styled-components';\n\nexport const DeleteButton = styled.button`\n    box-sizing: border-box;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    background-color: transparent;\n    border: 2px solid #e74c3c;\n    border-radius: 0.6em;\n    color: white;\n    cursor: pointer;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    -webkit-align-self: center;\n    -ms-flex-item-align: center;\n    align-self: center;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 1;\n    margin: 20px;\n    padding: 0.5em 1.5em;\n    text-decoration: none;\n    text-align: center;\n    text-transform: uppercase;\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 700;\n    -webkit-transition: box-shadow 300ms ease-in-out, color 300ms ease-in-out;\n    transition: box-shadow 300ms ease-in-out, color 300ms ease-in-out;\n    font-family: Georgia;\n    :focus,\n    :hover,\n    :active {\n        color: #000;\n        outline: 0;\n        box-shadow: 0 0 40px 40px #e74c3c inset;\n    }\n`;\n\nexport const List = styled.ul`\n    padding: 0 20px;\n    border-radius: 5px;\n    min-width: 320px;\n    text-align: center;\n    align-content: center;\n`;\n\nexport const ListItem = styled.li`\n    display: flex;\n    align-items: center;\n    text-align: center;\n    justify-content: space-between;\n    border: 2px solid #000;\n    border-radius: 5px;\n    max-width: 500px;\n    list-style: none;\n    position: relative;\n    padding-left: 20px;\n    margin-bottom: 5px;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: #383040;\n    text-transform: uppercase;\n    background: linear-gradient(to right, #fdc830, #f37335);\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n    border-radius: 5px;\n    :before {\n        content: '\\f067';\n        font-family: 'Font Awesome 5 Free';\n        position: absolute;\n        left: 0;\n        color: #f37335;\n        font-size: 1.3rem;\n        padding-top: 3px;\n        margin-left: 3px;\n    }\n`;\n\nexport const ListContainer = styled.div`\n    display: flex;\n    margin: 0 auto;\n    justify-content: center;\n    align-items: center;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { delContact } from 'redux/contacts/operations';\nimport {\n    DeleteButton,\n    List,\n    ListItem,\n    ListContainer,\n} from './ContactList.styled';\n\nconst getVisibleContacts = (contacts, filter) => {\n    if (!filter) {\n        return contacts;\n    }\n\n    return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n};\n\nexport const ContactList = () => {\n    const contacts = useSelector(getContacts);\n    const filter = useSelector(getFilter);\n    const visibleContacts = getVisibleContacts(contacts, filter);\n\n    const dispatch = useDispatch();\n    const handleDelete = id => dispatch(delContact(id));\n\n    return (\n        <ListContainer>\n            <List>\n                {visibleContacts.map(({ id, name, number }, idx) => (\n                    <ListItem key={idx}>\n                        {name}: {number}\n                        <DeleteButton\n                            type=\"button\"\n                            onClick={() => handleDelete(id)}\n                        >\n                            Delete\n                        </DeleteButton>\n                    </ListItem>\n                ))}\n            </List>\n        </ListContainer>\n    );\n};\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    margin: 0.5rem auto;\n    font-size: 1em;\n    font-family: 'Arial', sans-serif;\n    color: #3d3d3d;\n    padding: 0.4em 0.8em;\n    border-radius: 0.4em;\n    background-color: #dcdcdc;\n    font-weight: bold;\n    text-align: center;\n    border: 1px solid #a9a9a9;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n    overflow: hidden;\n`;\n\nexport const FilterInput = styled.input`\n    display: flex;\n    align-items: center;\n    justify-items: center;\n    flex-direction: column;\n    align-items: center;\n    font-size: large;\n    text-align: left;\n    border-radius: 8px;\n    background-color: #f2f2f2;\n    padding: 10px;\n    font-size: 16px;\n    box-shadow: 0px 0px 5px #888;\n    border: 2px solid #666;\n`;\n","import { FilterLabel, FilterInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilter);\n\n    const handleChange = e => {\n        dispatch(setFilter(e.target.value));\n    };\n\n    return (\n        <div>\n            <FilterLabel>\n                Find contacts by Name\n                <FilterInput\n                    type=\"text\"\n                    name=\"filter\"\n                    placeholder=\"Enter filter\"\n                    value={filter}\n                    onChange={handleChange}\n                />\n            </FilterLabel>\n        </div>\n    );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(getIsLoading);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <>\n            <Helmet>\n                <title>Phonebook</title>\n            </Helmet>\n            <ContactForm />\n            {isLoading && <Loader />}\n            <Filter />\n            <ContactList />\n        </>\n    );\n}\n"],"names":["FormS","styled","InputS","LabelS","ButtonS","getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","form","currentTarget","some","contact","alert","addContact","reset","type","pattern","title","required","placeholder","value","onChange","target","DeleteButton","List","ListItem","ListContainer","ContactList","visibleContacts","toLowerCase","includes","getVisibleContacts","map","idx","id","onClick","delContact","handleDelete","FilterLabel","FilterInput","Filter","setFilter","Contacts","useEffect","fetchContacts","Helmet","Loader"],"sourceRoot":""}